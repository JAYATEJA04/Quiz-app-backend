[
  {
    "introduction": "You’ll explore key concepts like components, state, and props, move on to hooks, routing, and context, and finally tackle advanced topics like performance optimization and server-side rendering. Whether you're just starting out or aiming to refine your skills, this quiz will guide you through every step of your React journey.",
    "levels": [
      {
        "level": "Fundamentals",
        "intro": "Start here to learn the essentials of ReactJS, focusing on building basic components and understanding the core concepts.",
        "QuizButtonText": "Let's get started!",
        "ScreenName": "RJS_Fundamentals_quiz_question",
        "topics": [
          {
            "title": "JSX",
            "description": "Write HTML-like syntax directly in JavaScript."
          },
          {
            "title": "Components",
            "description": "Build reusable UI elements."
          },
          {
            "title": "Props & State",
            "description": "Pass data and manage component memory."
          },
          {
            "title": "Event Handling",
            "description": "Capture user interactions like clicks and inputs."
          },
          {
            "title": "Conditional Rendering",
            "description": "Render different UI elements based on conditions."
          }
        ]
      },
      {
        "level": "Intermediate",
        "intro": "Dive deeper into React’s features, managing more complex applications efficiently.",
        "QuizButtonText": "Let's gear up!",
        "ScreenName": "RJS_Intermediate_quiz_question",
        "topics": [
          {
            "title": "Hooks",
            "description": "Manage state and side effects in functional components."
          },
          {
            "title": "Context API",
            "description": "Share data across components without props drilling."
          },
          {
            "title": "Routing",
            "description": "Navigate between pages using React Router."
          },
          {
            "title": "Form Handling",
            "description": "Work with inputs and validations."
          },
          {
            "title": "Lifecycle Methods",
            "description": "Control component behavior at different stages."
          }
        ]
      },
      {
        "level": "Advanced",
        "intro": "Explore powerful tools and techniques to optimize performance and handle large-scale applications.",
        "QuizButtonText": "Let's go!",
        "ScreenName": "RJS_Advance_quiz_question",
        "topics": [
          {
            "title": "Custom Hooks",
            "description": "Reuse logic across components."
          },
          {
            "title": "Performance Optimization",
            "description": "Use tools like useMemo and useCallback."
          },
          {
            "title": "Code Splitting & Lazy Loading",
            "description": "Improve app performance by loading only necessary code."
          },
          {
            "title": "Error Boundaries",
            "description": "Handle errors gracefully in your application."
          },
          {
            "title": "Server-Side Rendering (SSR)",
            "description": "Improve SEO and performance with frameworks like Next.js."
          }
        ]
      }
    ]
  }
]
